from urllib.request import urlopen,Request
from urllib.error import HTTPError
from bs4 import BeautifulSoup
import re
import requests


class Tool():
    #去除img标签,7位长空格
    removeImg = re.compile('<img.*?>| {7}|')
    #删除超链接标签
    removeAddr = re.compile('<a.*?>|</a>')
    #把换行的标签换为\n
    replaceLine = re.compile('<tr>|<div>|</div>|</p>')
    #将表格制表<td>替换为\t
    replaceTD= re.compile('<td>')
    #把段落开头换为\n加空两格
    replacePara = re.compile('<p.*?>')
    #将换行符或双换行符替换为\n
    replaceBR = re.compile('<br><br>|<br>')
    #将其余标签剔除
    removeExtraTag = re.compile('<.*?>')
    def replace(self,x):
        x = re.sub(self.removeImg,"",x)
        x = re.sub(self.removeAddr,"",x)
        x = re.sub(self.replaceLine,"\n",x)
        x = re.sub(self.replaceTD,"\t",x)
        x = re.sub(self.replacePara,"\n    ",x)
        x = re.sub(self.replaceBR,"\n",x)
        x = re.sub(self.removeExtraTag,"",x)
        #strip()将前后多余内容删除
        return x.strip()
class BDTB:
    # 初始化，传入基地址，是否只看楼主的参数
    def __init__(self,baseUrl,seeLZ):
        self.baseURL = baseUrl
        self.seeLZ = '?see_lz='+str(seeLZ)
        self.tool = Tool()

    def getPage(self,pageNum):
        global url
        headers = {
            'User-Agent':'Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.94 Safari/537.36'
        }
        try:
            url = self.baseURL + self.seeLZ + '&pn=' +str(pageNum)
            html = requests.get(url,headers=headers)
            #print(html.text)
            return html
        except HTTPError as e:
            print(e)
            return None
        except Exception as e:
            print(e)

    def getTitle(self):
        page = self.getPage(1)
        bsObj = BeautifulSoup(page.text,'html.parser')

        title = bsObj.find(name='h3')
        print(title.string)

    def getPageNum(self):
        page = self.getPage(1)
        #print(page.url)
        #print(page.text)
        bsObj = BeautifulSoup(page.text,'html.parser')
        Nums = bsObj.find('span',{'class':'red','style':None})
        print(Nums.string)

    def getContent(self):

        page = self.getPage(1)
        pattern = re.compile('<div id="post_content_.*?>(.*?)</div>', re.S)
        items = re.findall(pattern, page.text)
        floor = 1
        for item in items:
            print('{0}楼---------------------------------------------------------------------------------------------------------'.format(floor))
            print(self.tool.replace(item))
            floor = floor+1


baseURL='http://tieba.baidu.com/p/3138733512'
bdtb =BDTB(baseURL,1)
bdtb.getTitle()
bdtb.getPageNum()
bdtb.getContent()
